{"ast":null,"code":"import axios from 'axios';\nimport { GET_PROFILE, PROFILE_ERROR } from './types';\nimport { setAlert } from './alert'; //Get current users profile\n\nexport const getCurrentProfile = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/profile/me');\n    console.log(res);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; //Create or Update profie\n\nexport const createProfile = (FormData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/profile', FormData, config);\n    dispatch({\n      type: GET_PROFILE,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Profile updated' : 'Profile created', 'success'));\n\n    if (!edit) {\n      history.push('/dashboard');\n    }\n  } catch (error) {\n    console.log(error);\n    const errors = error.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: PROFILE_ERROR,\n      payload: {\n        msg: error.response.statusText,\n        status: error.response.status\n      }\n    });\n  }\n}; //Add Experience\n\nexport const addExperience = (formData, history);","map":{"version":3,"sources":["C:/Users/698858/Documents/MERN/devconnector/client/src/actions/profile.js"],"names":["axios","GET_PROFILE","PROFILE_ERROR","setAlert","getCurrentProfile","dispatch","res","get","console","log","type","payload","data","error","msg","response","statusText","status","createProfile","FormData","history","edit","config","headers","post","push","errors","forEach","addExperience","formData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,SAA3C;AACA,SAASC,QAAT,QAAyB,SAAzB,C,CAEA;;AACA,OAAO,MAAMC,iBAAiB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACH,UAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,iBAAV,CAAlB;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAD,IAAAA,QAAQ,CAAC;AACRK,MAAAA,IAAI,EAAET,WADE;AAERU,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFL,KAAD,CAAR;AAIA,GARD,CAQE,OAAOC,KAAP,EAAc;AACfL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAR,IAAAA,QAAQ,CAAC;AACRK,MAAAA,IAAI,EAAER,aADE;AAERS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,KAAK,CAACE,QAAN,CAAeC,UAAtB;AAAkCC,QAAAA,MAAM,EAAEJ,KAAK,CAACE,QAAN,CAAeE;AAAzD;AAFD,KAAD,CAAR;AAIA;AACD,CAhBM,C,CAkBP;;AACA,OAAO,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAWC,OAAX,EAAoBC,IAAI,GAAG,KAA3B,KAAqC,MAAOhB,QAAP,IAAoB;AACrF,MAAI;AACH,UAAMiB,MAAM,GAAG;AACdC,MAAAA,OAAO,EAAE;AACR,wBAAgB;AADR;AADK,KAAf;AAMA,UAAMjB,GAAG,GAAG,MAAMN,KAAK,CAACwB,IAAN,CAAW,cAAX,EAA2BL,QAA3B,EAAqCG,MAArC,CAAlB;AACAjB,IAAAA,QAAQ,CAAC;AACRK,MAAAA,IAAI,EAAET,WADE;AAERU,MAAAA,OAAO,EAAEL,GAAG,CAACM;AAFL,KAAD,CAAR;AAIAP,IAAAA,QAAQ,CAACF,QAAQ,CAACkB,IAAI,GAAG,iBAAH,GAAuB,iBAA5B,EAA+C,SAA/C,CAAT,CAAR;;AAEA,QAAI,CAACA,IAAL,EAAW;AACVD,MAAAA,OAAO,CAACK,IAAR,CAAa,YAAb;AACA;AACD,GAjBD,CAiBE,OAAOZ,KAAP,EAAc;AACfL,IAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,UAAMa,MAAM,GAAGb,KAAK,CAACE,QAAN,CAAeH,IAAf,CAAoBc,MAAnC;;AACA,QAAIA,MAAJ,EAAY;AACXA,MAAAA,MAAM,CAACC,OAAP,CAAgBd,KAAD,IAAWR,QAAQ,CAACF,QAAQ,CAACU,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAlC;AACA;;AACDT,IAAAA,QAAQ,CAAC;AACRK,MAAAA,IAAI,EAAER,aADE;AAERS,MAAAA,OAAO,EAAE;AAAEG,QAAAA,GAAG,EAAED,KAAK,CAACE,QAAN,CAAeC,UAAtB;AAAkCC,QAAAA,MAAM,EAAEJ,KAAK,CAACE,QAAN,CAAeE;AAAzD;AAFD,KAAD,CAAR;AAIA;AACD,CA7BM,C,CAgCP;;AAEA,OAAO,MAAMW,aAAa,IAAKC,QAAQ,EAAET,OAAf,CAAnB","sourcesContent":["import axios from 'axios';\r\n\r\nimport { GET_PROFILE, PROFILE_ERROR } from './types';\r\nimport { setAlert } from './alert';\r\n\r\n//Get current users profile\r\nexport const getCurrentProfile = () => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await axios.get('/api/profile/me');\r\n\r\n\t\tconsole.log(res);\r\n\t\tdispatch({\r\n\t\t\ttype: GET_PROFILE,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t\tdispatch({\r\n\t\t\ttype: PROFILE_ERROR,\r\n\t\t\tpayload: { msg: error.response.statusText, status: error.response.status }\r\n\t\t});\r\n\t}\r\n};\r\n\r\n//Create or Update profie\r\nexport const createProfile = (FormData, history, edit = false) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst config = {\r\n\t\t\theaders: {\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tconst res = await axios.post('/api/profile', FormData, config);\r\n\t\tdispatch({\r\n\t\t\ttype: GET_PROFILE,\r\n\t\t\tpayload: res.data\r\n\t\t});\r\n\t\tdispatch(setAlert(edit ? 'Profile updated' : 'Profile created', 'success'));\r\n\r\n\t\tif (!edit) {\r\n\t\t\thistory.push('/dashboard');\r\n\t\t}\r\n\t} catch (error) {\r\n\t\tconsole.log(error);\r\n\t\tconst errors = error.response.data.errors;\r\n\t\tif (errors) {\r\n\t\t\terrors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\r\n\t\t}\r\n\t\tdispatch({\r\n\t\t\ttype: PROFILE_ERROR,\r\n\t\t\tpayload: { msg: error.response.statusText, status: error.response.status }\r\n\t\t});\r\n\t}\r\n};\r\n\r\n\r\n//Add Experience\r\n\r\nexport const addExperience  = (formData, history)"]},"metadata":{},"sourceType":"module"}